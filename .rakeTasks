<?xml version="1.0" encoding="UTF-8"?>
<Settings><!--This file was automatically generated by Ruby plugin.
You are allowed to: 
1. Remove rake task
2. Add existing rake tasks
To add existing rake tasks automatically delete this file and reload the project.
--><RakeGroup description="" fullCmd="" taksId="rake"><RakeTask description="List versions of all Rails frameworks and the environment" fullCmd="about" taksId="about" /><RakeGroup description="" fullCmd="" taksId="app"><RakeTask description="Applies the template supplied by LOCATION=(/path/to/template) or URL" fullCmd="app:template" taksId="template" /><RakeTask description="Update configs and some other initially generated files (or use just update:configs or update:bin)" fullCmd="app:update" taksId="update" /><RakeGroup description="" fullCmd="" taksId="templates"><RakeTask description="" fullCmd="app:templates:copy" taksId="copy" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="update"><RakeTask description="" fullCmd="app:update:bin" taksId="bin" /><RakeTask description="" fullCmd="app:update:configs" taksId="configs" /><RakeTask description="" fullCmd="app:update:upgrade_guide_info" taksId="upgrade_guide_info" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="assets"><RakeTask description="Remove old compiled assets" fullCmd="assets:clean[keep]" taksId="clean[keep]" /><RakeTask description="Remove compiled assets" fullCmd="assets:clobber" taksId="clobber" /><RakeTask description="Load asset compile environment" fullCmd="assets:environment" taksId="environment" /><RakeTask description="Copy precompiled assets to a filename without the fingerprint, suitable for static file use" fullCmd="assets:non_digested" taksId="non_digested" /><RakeTask description="Compile all the assets named in config.assets.precompile" fullCmd="assets:precompile" taksId="precompile" /><RakeTask description="" fullCmd="assets:clean" taksId="clean" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="browser_sync"><RakeTask description="Starts browser sync" fullCmd="browser_sync:start" taksId="start" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="cache_digests"><RakeTask description="Lookup first-level dependencies for TEMPLATE (like messages/show or comments/_comment.html)" fullCmd="cache_digests:dependencies" taksId="dependencies" /><RakeTask description="Lookup nested dependencies for TEMPLATE (like messages/show or comments/_comment.html)" fullCmd="cache_digests:nested_dependencies" taksId="nested_dependencies" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="cases"><RakeTask description="Create dummy case entries for demonstration purposes" fullCmd="cases:demo_entries" taksId="demo_entries" /><RakeTask description="Create mass demo" fullCmd="cases:massdemo" taksId="massdemo" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="data"><RakeTask description="Apply pending data migrations" fullCmd="data:migrate" taksId="migrate" /><RakeGroup description="" fullCmd="" taksId="migrate"><RakeTask description="Add Business Unit roles" fullCmd="data:migrate:add_business_unit_roles" taksId="add_business_unit_roles" /><RakeTask description="Add disclosure team assignments to cases taken on by press office" fullCmd="data:migrate:add_disclosure_team" taksId="add_disclosure_team" /><RakeTask description="Add full names and real email addresses to dev users" fullCmd="data:migrate:add_names_to_dev_users" taksId="add_names_to_dev_users" /><RakeTask description="add requires refusal reasons to non-granted outcomes" fullCmd="data:migrate:add_refusal_reasons" taksId="add_refusal_reasons" /><RakeTask description="run all data migrations" fullCmd="data:migrate:all" taksId="all" /><RakeTask description="Remove orphan PDFs from S3" fullCmd="data:migrate:delete_orphan_pdf" taksId="delete_orphan_pdf" /><RakeTask description="Revert single data migration using VERSION" fullCmd="data:migrate:down" taksId="down" /><RakeTask description="Fix responded transitions where assignee and user ids are the actual object" fullCmd="data:migrate:fix_responded_transition_user_metadata" taksId="fix_responded_transition_user_metadata" /><RakeTask description="Removes PDF conversions of image files" fullCmd="data:migrate:image_pdf_remove" taksId="image_pdf_remove" /><RakeGroup description="" fullCmd="" taksId="import"><RakeTask description="Import hierarchical team data" fullCmd="data:migrate:import:teams" taksId="teams" /></RakeGroup><RakeTask description="Make Previews for all existing docs" fullCmd="data:migrate:make_previews" taksId="make_previews" /><RakeTask description="List pending migrations" fullCmd="data:migrate:pending" taksId="pending" /><RakeTask description="Alter sequencing of refusal reasons" fullCmd="data:migrate:refusal_reason_resequence" taksId="refusal_reason_resequence" /><RakeTask description="Alter refusal reasons - clarifications to not met" fullCmd="data:migrate:rename_clarifications_reason" taksId="rename_clarifications_reason" /><RakeTask description="Sets internal deadline on all cases" fullCmd="data:migrate:set_internal_deadline" taksId="set_internal_deadline" /><RakeTask description="Skip single data migration using VERSION" fullCmd="data:migrate:skip" taksId="skip" /><RakeTask description="Apply single data migration using VERSION" fullCmd="data:migrate:up" taksId="up" /></RakeGroup><RakeTask description="Mark all pending data migrations complete" fullCmd="data:reset" taksId="reset" /><RakeTask description="" fullCmd="data:init_migration" taksId="init_migration" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="db"><RakeTask description="Erase all tables" fullCmd="db:clear" taksId="clear" /><RakeTask description="Creates the database from DATABASE_URL or config/database.yml for the current RAILS_ENV (use db:create:all to create all databases in the config). Without RAILS_ENV or when RAILS_ENV is development, it defaults to creating the development and test databases" fullCmd="db:create" taksId="create" /><RakeTask description="Drops the database from DATABASE_URL or config/database.yml for the current RAILS_ENV (use db:drop:all to drop all databases in the config). Without RAILS_ENV or when RAILS_ENV is development, it defaults to dropping the development and test databases" fullCmd="db:drop" taksId="drop" /><RakeGroup description="" fullCmd="" taksId="dump"><RakeTask description="makes an sql dump of the database on the demo environement to the local machine" fullCmd="db:dump:demo[host]" taksId="demo[host]" /><RakeTask description="Help text for rake db:dump:* tasks" fullCmd="db:dump:help" taksId="help" /><RakeTask description="makes an anonymised dump of the local database" fullCmd="db:dump:local[filename,anonymized]" taksId="local[filename,anonymized]" /><RakeTask description="makes a sql dump of the production database and copies to the local machine" fullCmd="db:dump:prod[host]" taksId="prod[host]" /><RakeTask description="makes an sql dump of the database on the staging environment to the local machine" fullCmd="db:dump:staging[host]" taksId="staging[host]" /><RakeTask description="" fullCmd="db:dump:demo" taksId="demo" /><RakeTask description="" fullCmd="db:dump:local" taksId="local" /><RakeTask description="" fullCmd="db:dump:prod" taksId="prod" /><RakeTask description="" fullCmd="db:dump:staging" taksId="staging" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="environment"><RakeTask description="Set the environment value for the database" fullCmd="db:environment:set" taksId="set" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="fixtures"><RakeTask description="Loads fixtures into the current environment's database" fullCmd="db:fixtures:load" taksId="load" /><RakeTask description="" fullCmd="db:fixtures:identify" taksId="identify" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="load"><RakeTask description="Loads an SQL dump of the database created by db:dump:&lt;env&gt; rake task to the local database" fullCmd="db:load:local[file]" taksId="local[file]" /><RakeTask description="" fullCmd="db:load:local" taksId="local" /></RakeGroup><RakeTask description="Migrate the database (options: VERSION=x, VERBOSE=false, SCOPE=blog)" fullCmd="db:migrate" taksId="migrate" /><RakeGroup description="" fullCmd="" taksId="migrate"><RakeTask description="Display status of migrations" fullCmd="db:migrate:status" taksId="status" /><RakeTask description="" fullCmd="db:migrate:down" taksId="down" /><RakeTask description="" fullCmd="db:migrate:redo" taksId="redo" /><RakeTask description="" fullCmd="db:migrate:reset" taksId="reset" /><RakeTask description="" fullCmd="db:migrate:up" taksId="up" /></RakeGroup><RakeTask description="Clear the database, run migrations and basic seeds (not users, teams, roles)" fullCmd="db:reseed" taksId="reseed" /><RakeTask description="Rolls the schema back to the previous version (specify steps w/ STEP=n)" fullCmd="db:rollback" taksId="rollback" /><RakeGroup description="" fullCmd="" taksId="schema"><RakeGroup description="" fullCmd="" taksId="cache"><RakeTask description="Clears a db/schema_cache.dump file" fullCmd="db:schema:cache:clear" taksId="clear" /><RakeTask description="Creates a db/schema_cache.dump file" fullCmd="db:schema:cache:dump" taksId="dump" /></RakeGroup><RakeTask description="Creates a db/schema.rb file that is portable against any DB supported by Active Record" fullCmd="db:schema:dump" taksId="dump" /><RakeTask description="Loads a schema.rb file into the database" fullCmd="db:schema:load" taksId="load" /><RakeTask description="" fullCmd="db:schema:load_if_ruby" taksId="load_if_ruby" /></RakeGroup><RakeTask description="Loads the seed data from db/seeds.rb" fullCmd="db:seed" taksId="seed" /><RakeGroup description="" fullCmd="" taksId="seed"><RakeTask description="clear database" fullCmd="db:seed:clear" taksId="clear" /><RakeTask description="seed development teams and users" fullCmd="db:seed:dev" taksId="dev" /><RakeGroup description="" fullCmd="" taksId="dev"><RakeTask description="Seed teams for dev environment" fullCmd="db:seed:dev:teams" taksId="teams" /><RakeTask description="Seed users, teams, roles for dev environemnt" fullCmd="db:seed:dev:users" taksId="users" /></RakeGroup><RakeTask description="seeds live team and user data" fullCmd="db:seed:prod" taksId="prod" /><RakeGroup description="" fullCmd="" taksId="prod"><RakeTask description="Add group emails to teams" fullCmd="db:seed:prod:group_emails" taksId="group_emails" /><RakeTask description="Seed categories and closure metadata" fullCmd="db:seed:prod:misc" taksId="misc" /><RakeTask description="Seed teams for production environment" fullCmd="db:seed:prod:teams" taksId="teams" /><RakeTask description="Seed users, teams, roles for production environemnt" fullCmd="db:seed:prod:users" taksId="users" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="sessions"><RakeTask description="Clear the sessions table" fullCmd="db:sessions:clear" taksId="clear" /><RakeTask description="Creates a sessions migration for use with ActiveRecord::SessionStore" fullCmd="db:sessions:create" taksId="create" /><RakeTask description="Trim old sessions from the table (default: &gt; 30 days)" fullCmd="db:sessions:trim" taksId="trim" /></RakeGroup><RakeTask description="Creates the database, loads the schema, and initializes with the seed data (use db:reset to also drop the database first)" fullCmd="db:setup" taksId="setup" /><RakeGroup description="" fullCmd="" taksId="structure"><RakeTask description="Dumps the database structure to db/structure.sql" fullCmd="db:structure:dump" taksId="dump" /><RakeTask description="Recreates the databases from the structure.sql file" fullCmd="db:structure:load" taksId="load" /><RakeTask description="" fullCmd="db:structure:load_if_sql" taksId="load_if_sql" /></RakeGroup><RakeTask description="Retrieves the current schema version number" fullCmd="db:version" taksId="version" /><RakeTask description="" fullCmd="db:_dump" taksId="_dump" /><RakeTask description="" fullCmd="db:abort_if_pending_migrations" taksId="abort_if_pending_migrations" /><RakeTask description="" fullCmd="db:charset" taksId="charset" /><RakeTask description="" fullCmd="db:check_protected_environments" taksId="check_protected_environments" /><RakeTask description="" fullCmd="db:collation" taksId="collation" /><RakeGroup description="" fullCmd="" taksId="create"><RakeTask description="" fullCmd="db:create:all" taksId="all" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="drop"><RakeTask description="" fullCmd="db:drop:_unsafe" taksId="_unsafe" /><RakeTask description="" fullCmd="db:drop:all" taksId="all" /></RakeGroup><RakeTask description="" fullCmd="db:forward" taksId="forward" /><RakeTask description="" fullCmd="db:load_config" taksId="load_config" /><RakeTask description="" fullCmd="db:purge" taksId="purge" /><RakeGroup description="" fullCmd="" taksId="purge"><RakeTask description="" fullCmd="db:purge:all" taksId="all" /></RakeGroup><RakeTask description="" fullCmd="db:reset" taksId="reset" /><RakeTask description="" fullCmd="db:structure_load" taksId="structure_load" /><RakeGroup description="" fullCmd="" taksId="test"><RakeTask description="" fullCmd="db:test:clone" taksId="clone" /><RakeTask description="" fullCmd="db:test:clone_schema" taksId="clone_schema" /><RakeTask description="" fullCmd="db:test:clone_structure" taksId="clone_structure" /><RakeTask description="" fullCmd="db:test:deprecated" taksId="deprecated" /><RakeTask description="" fullCmd="db:test:load" taksId="load" /><RakeTask description="" fullCmd="db:test:load_schema" taksId="load_schema" /><RakeTask description="" fullCmd="db:test:load_structure" taksId="load_structure" /><RakeTask description="" fullCmd="db:test:prepare" taksId="prepare" /><RakeTask description="" fullCmd="db:test:purge" taksId="purge" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="demo"><RakeTask description="Sets specified case to be respondable by kilo: rake demo:kilo[170823004]" fullCmd="demo:kilo[case_num]" taksId="kilo[case_num]" /><RakeTask description="Sets specified case to be visible by Press office: rake demo:viz[170821004]" fullCmd="demo:press[case_num]" taksId="press[case_num]" /><RakeTask description="" fullCmd="demo:kilo" taksId="kilo" /><RakeTask description="" fullCmd="demo:press" taksId="press" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="dev"><RakeTask description="Toggle development mode caching on/off" fullCmd="dev:cache" taksId="cache" /></RakeGroup><RakeTask description="Print out all defined initializers in the order they are invoked by Rails" fullCmd="initializers" taksId="initializers" /><RakeTask description="Start server to host jasmine specs" fullCmd="jasmine" taksId="jasmine" /><RakeGroup description="" fullCmd="" taksId="jasmine"><RakeTask description="Run jasmine tests in a browser, random and seed override config" fullCmd="jasmine:ci[random,seed]" taksId="ci[random,seed]" /><RakeTask description="" fullCmd="jasmine:ci" taksId="ci" /><RakeTask description="" fullCmd="jasmine:configure" taksId="configure" /><RakeTask description="" fullCmd="jasmine:configure_plugins" taksId="configure_plugins" /><RakeTask description="" fullCmd="jasmine:require" taksId="require" /><RakeTask description="" fullCmd="jasmine:require_json" taksId="require_json" /><RakeTask description="" fullCmd="jasmine:server" taksId="server" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="kilo_map"><RakeTask description="lists business units and what correspondence types they deal with" fullCmd="kilo_map:audit_corr_types" taksId="audit_corr_types" /><RakeTask description="Updates business units requiring rights to respond to SARs" fullCmd="kilo_map:load_sars[filename]" taksId="load_sars[filename]" /><RakeTask description="" fullCmd="kilo_map:load_sars" taksId="load_sars" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="log"><RakeTask description="Truncates all/specified *.log files in log/ to zero bytes (specify which logs with LOGS=test,development)" fullCmd="log:clear" taksId="clear" /></RakeGroup><RakeTask description="Prints out your Rack middleware stack" fullCmd="middleware" taksId="middleware" /><RakeTask description="Enumerate all annotations (use notes:optimize, :fixme, :todo for focus)" fullCmd="notes" taksId="notes" /><RakeGroup description="" fullCmd="" taksId="notes"><RakeTask description="Enumerate a custom annotation, specify with ANNOTATION=CUSTOM" fullCmd="notes:custom" taksId="custom" /><RakeTask description="" fullCmd="notes:fixme" taksId="fixme" /><RakeTask description="" fullCmd="notes:optimize" taksId="optimize" /><RakeTask description="" fullCmd="notes:todo" taksId="todo" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="parallel"><RakeTask description="Create test databases via db:create --&gt; parallel:create[num_cpus]" fullCmd="parallel:create[count]" taksId="create[count]" /><RakeTask description="Drop test databases via db:drop --&gt; parallel:drop[num_cpus]" fullCmd="parallel:drop[count]" taksId="drop[count]" /><RakeTask description="Run features in parallel with parallel:features[num_cpus]" fullCmd="parallel:features[count,pattern,options,pass_through]" taksId="features[count,pattern,options,pass_through]" /><RakeTask description="Run features-spinach in parallel with parallel:features-spinach[num_cpus]" fullCmd="parallel:features-spinach[count,pattern,options,pass_through]" taksId="features-spinach[count,pattern,options,pass_through]" /><RakeTask description="Load dumped schema for test databases via db:schema:load --&gt; parallel:load_schema[num_cpus]" fullCmd="parallel:load_schema[count]" taksId="load_schema[count]" /><RakeTask description="Load structure for test databases via db:structure:load --&gt; parallel:load_structure[num_cpus]" fullCmd="parallel:load_structure[count]" taksId="load_structure[count]" /><RakeTask description="Update test databases via db:migrate --&gt; parallel:migrate[num_cpus]" fullCmd="parallel:migrate[count]" taksId="migrate[count]" /><RakeTask description="Update test databases by dumping and loading --&gt; parallel:prepare[num_cpus]" fullCmd="parallel:prepare[count]" taksId="prepare[count]" /><RakeTask description="Launch given rake command in parallel" fullCmd="parallel:rake[command,count]" taksId="rake[command,count]" /><RakeTask description="Rollback test databases via db:rollback --&gt; parallel:rollback[num_cpus]" fullCmd="parallel:rollback[count]" taksId="rollback[count]" /><RakeTask description="Load the seed data from db/seeds.rb via db:seed --&gt; parallel:seed[num_cpus]" fullCmd="parallel:seed[count]" taksId="seed[count]" /><RakeTask description="Setup test databases via db:setup --&gt; parallel:setup[num_cpus]" fullCmd="parallel:setup[count]" taksId="setup[count]" /><RakeTask description="Run spec in parallel with parallel:spec[num_cpus]" fullCmd="parallel:spec[count,pattern,options,pass_through]" taksId="spec[count,pattern,options,pass_through]" /><RakeGroup description="" fullCmd="" taksId="spec"><RakeTask description="Run only the feature specs" fullCmd="parallel:spec:features" taksId="features" /><RakeTask description="Run only the [non-feature] specs" fullCmd="parallel:spec:non_features" taksId="non_features" /><RakeTask description="Run only the [stats and model] specs" fullCmd="parallel:spec:stats" taksId="stats" /><RakeTask description="" fullCmd="parallel:spec:specs" taksId="specs" /></RakeGroup><RakeTask description="Run test in parallel with parallel:test[num_cpus]" fullCmd="parallel:test[count,pattern,options,pass_through]" taksId="test[count,pattern,options,pass_through]" /><RakeTask description="" fullCmd="parallel:create" taksId="create" /><RakeTask description="" fullCmd="parallel:drop" taksId="drop" /><RakeTask description="" fullCmd="parallel:features" taksId="features" /><RakeTask description="" fullCmd="parallel:features-spinach" taksId="features-spinach" /><RakeTask description="" fullCmd="parallel:load_schema" taksId="load_schema" /><RakeTask description="" fullCmd="parallel:load_structure" taksId="load_structure" /><RakeTask description="" fullCmd="parallel:migrate" taksId="migrate" /><RakeTask description="" fullCmd="parallel:prepare" taksId="prepare" /><RakeTask description="" fullCmd="parallel:rake" taksId="rake" /><RakeTask description="" fullCmd="parallel:rollback" taksId="rollback" /><RakeTask description="" fullCmd="parallel:seed" taksId="seed" /><RakeTask description="" fullCmd="parallel:setup" taksId="setup" /><RakeTask description="" fullCmd="parallel:spec" taksId="spec" /><RakeTask description="" fullCmd="parallel:test" taksId="test" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="pg_search"><RakeGroup description="" fullCmd="" taksId="multisearch"><RakeTask description="Rebuild PgSearch multisearch records for a given model" fullCmd="pg_search:multisearch:rebuild[model,schema]" taksId="rebuild[model,schema]" /><RakeTask description="" fullCmd="pg_search:multisearch:rebuild" taksId="rebuild" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="raven"><RakeTask description="Send a test event to the remote Sentry server" fullCmd="raven:test[dsn]" taksId="test[dsn]" /><RakeTask description="" fullCmd="raven:test" taksId="test" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="reports"><RakeTask description="produce audit report" fullCmd="reports:audit[start_date,end_date]" taksId="audit[start_date,end_date]" /><RakeTask description="" fullCmd="reports:audit" taksId="audit" /><RakeTask description="" fullCmd="reports:r003" taksId="r003" /></RakeGroup><RakeTask description="Restart app by touching tmp/restart.txt" fullCmd="restart" taksId="restart" /><RakeTask description="Print out all defined routes in match order, with names" fullCmd="routes" taksId="routes" /><RakeGroup description="" fullCmd="" taksId="sar"><RakeTask description="create a dummy SAR case" fullCmd="sar:create" taksId="create" /></RakeGroup><RakeTask description="Generate a cryptographically secure secret key (this is typically used to generate a secret for cookie sessions)" fullCmd="secret" taksId="secret" /><RakeGroup description="" fullCmd="" taksId="seed"><RakeGroup description="" fullCmd="" taksId="search"><RakeTask description="Seeds the database ready for testing full text search" fullCmd="seed:search:data" taksId="data" /></RakeGroup></RakeGroup><RakeTask description="run Smoke tests" fullCmd="smoke" taksId="smoke" /><RakeTask description="Run all specs in spec directory (excluding plugin specs)" fullCmd="spec" taksId="spec" /><RakeGroup description="" fullCmd="" taksId="spec"><RakeTask description="Run the code examples in spec/controllers" fullCmd="spec:controllers" taksId="controllers" /><RakeTask description="Run the code examples in spec/decorators" fullCmd="spec:decorators" taksId="decorators" /><RakeTask description="Run the code examples in spec/factory_specs" fullCmd="spec:factory_specs" taksId="factory_specs" /><RakeTask description="Run the code examples in spec/features" fullCmd="spec:features" taksId="features" /><RakeTask description="Run the code examples in spec/form_models" fullCmd="spec:form_models" taksId="form_models" /><RakeTask description="Run the code examples in spec/helpers" fullCmd="spec:helpers" taksId="helpers" /><RakeTask description="Run the code examples in spec/jobs" fullCmd="spec:jobs" taksId="jobs" /><RakeTask description="Run the code examples in spec/lib" fullCmd="spec:lib" taksId="lib" /><RakeTask description="Run the code examples in spec/mailers" fullCmd="spec:mailers" taksId="mailers" /><RakeTask description="Run the code examples in spec/models" fullCmd="spec:models" taksId="models" /><RakeTask description="Run the code examples in spec/policies" fullCmd="spec:policies" taksId="policies" /><RakeTask description="Run the code examples in spec/routing" fullCmd="spec:routing" taksId="routing" /><RakeTask description="Run the code examples in spec/services" fullCmd="spec:services" taksId="services" /><RakeTask description="Run the code examples in spec/state_machines" fullCmd="spec:state_machines" taksId="state_machines" /><RakeTask description="Run the code examples in spec/support" fullCmd="spec:support" taksId="support" /><RakeTask description="Run the code examples in spec/validators" fullCmd="spec:validators" taksId="validators" /><RakeTask description="Run the code examples in spec/views" fullCmd="spec:views" taksId="views" /><RakeTask description="" fullCmd="spec:prepare" taksId="prepare" /><RakeTask description="" fullCmd="spec:statsetup" taksId="statsetup" /></RakeGroup><RakeTask description="Report code statistics (KLOCs, etc) from the application or engine" fullCmd="stats" taksId="stats" /><RakeGroup description="" fullCmd="" taksId="test"><RakeTask description="Run tests for {:decorators=&gt;&quot;test:prepare&quot;}" fullCmd="test:decorators" taksId="decorators" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="time"><RakeTask description="List all time zones, list by two-letter country code (`rails time:zones[US]`), or list by UTC offset (`rails time:zones[-8]`)" fullCmd="time:zones[country_or_offset]" taksId="zones[country_or_offset]" /><RakeTask description="" fullCmd="time:zones" taksId="zones" /><RakeGroup description="" fullCmd="" taksId="zones"><RakeTask description="" fullCmd="time:zones:all" taksId="all" /><RakeTask description="" fullCmd="time:zones:local" taksId="local" /><RakeTask description="" fullCmd="time:zones:us" taksId="us" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="tmp"><RakeTask description="Clear cache and socket files from tmp/ (narrow w/ tmp:cache:clear, tmp:sockets:clear)" fullCmd="tmp:clear" taksId="clear" /><RakeTask description="Creates tmp directories for cache, sockets, and pids" fullCmd="tmp:create" taksId="create" /><RakeGroup description="" fullCmd="" taksId="cache"><RakeTask description="" fullCmd="tmp:cache:clear" taksId="clear" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="pids"><RakeTask description="" fullCmd="tmp:pids:clear" taksId="clear" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="sockets"><RakeTask description="" fullCmd="tmp:sockets:clear" taksId="clear" /></RakeGroup></RakeGroup><RakeTask description="" fullCmd="csm" taksId="csm" /><RakeTask description="" fullCmd="default" taksId="default" /><RakeTask description="" fullCmd="environment" taksId="environment" /><RakeGroup description="" fullCmd="" taksId="rails"><RakeTask description="" fullCmd="rails:template" taksId="template" /><RakeGroup description="" fullCmd="" taksId="templates"><RakeTask description="" fullCmd="rails:templates:copy" taksId="copy" /></RakeGroup><RakeTask description="" fullCmd="rails:update" taksId="update" /><RakeGroup description="" fullCmd="" taksId="update"><RakeTask description="" fullCmd="rails:update:bin" taksId="bin" /><RakeTask description="" fullCmd="rails:update:configs" taksId="configs" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="railties"><RakeGroup description="" fullCmd="" taksId="install"><RakeTask description="" fullCmd="railties:install:migrations" taksId="migrations" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="semaphore"><RakeTask description="" fullCmd="semaphore:prepare_db_config" taksId="prepare_db_config" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="sidekiq"><RakeTask description="" fullCmd="sidekiq:status" taksId="status" /></RakeGroup><RakeTask description="" fullCmd="tmp" taksId="tmp" /><RakeTask description="" fullCmd="tmp/cache" taksId="tmp/cache" /><RakeTask description="" fullCmd="tmp/cache/assets" taksId="tmp/cache/assets" /><RakeTask description="" fullCmd="tmp/pids" taksId="tmp/pids" /><RakeTask description="" fullCmd="tmp/sockets" taksId="tmp/sockets" /></RakeGroup></Settings>
