name: Test Workflow
on:
  pull_request:
  push:
    branches:
      - main

concurrency:
  group: test-${{ github.ref }}
  cancel-in-progress: true

jobs:
  linting:
    runs-on: ubuntu-latest
    env:
      RAILS_ENV: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Ruby and install gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Lint Ruby files
        run: bundle exec rubocop

      - name: Security audit application code
        run: bundle exec brakeman -q

  test:
    runs-on: ubuntu-latest
    permissions:
      checks: write

    strategy:
      fail-fast: false
      matrix:
        ci_total_jobs: [40]
        ci_job_index:
          [
            "0, 1, 2, 3",
            "4, 5, 6, 7",
            "8, 9, 10, 11",
            "12, 13, 14, 15",
            "16, 17, 18, 19",
            "20, 21, 22, 23",
            "24, 25, 26, 27",
            "28, 29, 30, 31",
            "32, 33, 34, 35",
            "36, 37, 38, 39",
          ]

    env:
      RAILS_ENV: test
      DATABASE_URL: "postgresql://postgres:postgres@127.0.0.1"
      AWS_ACCESS_KEY_ID: 123
      AWS_SECRET_ACCESS_KEY: 456
      COVERAGE: true
      CI: true
      CI_TOTAL_JOBS: ${{ matrix.ci_total_jobs }}
      CI_JOB_INDEX: ${{ matrix.ci_job_index }}

    services:
      postgres:
        image: postgres:12-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Ruby and install gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Find yarn cache location
        id: yarn-cache
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - name: JS package cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-

      - name: Install packages
        run: yarn install --pure-lockfile

      - name: Setup databases
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 1
          max_attempts: 3
          command: bin/rake 'parallel:drop' && bin/rake 'parallel:setup[4]'

      - name: Run unit and feature tests
        run: bundle exec parallel_rspec -n "${CI_TOTAL_JOBS}" --only-group "${CI_JOB_INDEX}" --group-by "runtime"

      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{env.CI_JOB_INDEX}}
          path: coverage/.resultset.json

  coverage:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      RAILS_ENV: test
      AWS_ACCESS_KEY_ID: 123
      AWS_SECRET_ACCESS_KEY: 456
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Ruby and install gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Download coverage
        uses: actions/download-artifact@v4
        with:
          path: coverage

      - name: Collate coverage
        run: bundle exec rake coverage:report

      - name: Code coverage result
        uses: joshmfrankel/simplecov-check-action@main
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          minimum_suite_coverage: 93
          minimum_file_coverage: 100

  build-and-deploy:
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: [linting, coverage]
    uses: ./.github/workflows/deploy.yml
    secrets: inherit
