- content_for :page_title do
  = t('page_title.show_case_page', case_number: @case.number)

- if @accepted_now == 'true'
  .alert-green
    = t('alerts.assignment_accepted_html', case_list_url: cases_path)

- if @case.has_attribute?(:escalation_deadline) && @case.within_escalation_deadline?
  .alert-orange
    = t('alerts.escalation_warning_html', escalation_deadline: @case.escalation_deadline)

- content_for :heading
  span.visually-hidden
    = t('common.case.header_subject')
  = @case.subject

- content_for :sub_heading
  span.visually-hidden
    = t('common.case.header_case_number')
  = "#{@case.number} - #{@case.pretty_type}"

= render partial: 'layouts/header'

div id="case-#{@case.id}"
  section.case-info.has-actions
    h2.visually-hidden
      = "Actions you can take on this case"
    .button-holder
      - if (@filtered_permitted_events - [:edit_case, :destroy_case]).any?
        - if policy(@case).execute_response_approval?
          = action_button_for(:approve)
        - if policy(@case).upload_responses?
          = action_button_for(:add_responses)
        - if policy(@case).upload_responses_for_flagged?
          = action_button_for(:add_response_to_flagged_case)
        - if policy(@case).upload_responses_for_approve?
          = action_button_for(:upload_response_and_approve)
        - if policy(@case).upload_responses_for_redraft?
          = action_button_for(:upload_response_and_return_for_redraft)

        - if policy(@case).can_respond?
          = action_button_for(:respond)

        - permitted_events = @permitted_events - [:add_responses, :add_response_to_flagged_case, :approve, :respond, :reassign_user, :upload_response_and_approve, :upload_response_and_return_for_redraft]
        - if @case.type_abbreviation == 'SAR'
          - permitted_events.delete(:close)

        - permitted_events.each do |event|
          = action_button_for(event)

        - if policy(@case).assignments_execute_reassign_user?
          = action_button_for(:reassign_user)

        - action_button_for(:progress_for_clearance)

  section.case-info
    = render partial: 'cases/case_status', locals: {case_details: @case}

  - if @case.ico?
    - if case_attachments_visible_for_case?
      section.case-info
        = render partial: 'cases/case_attachments', locals: { case_details: @case }
    section.case-info
      = render partial: 'cases/ico/show_linked_cases', locals: { case_details: @case }
  - else
    section.case-info
      = render partial: 'cases/linked_cases', locals: { case_details: @case }

  section.case-info
    = render partial: 'cases/case_request', locals: {case_details: @case}

  section.case-info
    = render partial: "cases/#{@case.type_abbreviation.downcase}/case_details", locals: {case_details: @case}

  section.case-info
    = render partial: 'cases/clearance_levels', locals: { case_details: @case }

  - if @case.ico? === false
    - if case_attachments_visible_for_case?
      section.case-info
        = render partial: 'cases/case_attachments', locals: {case_details: @case}

  - if policy(@case).can_accept_or_reject_approver_assignment?
    section.case-info
      = render partial: 'what_do_you_want_to_do', locals: { case_details: @case }

  section#messages-section.case-info
    = render partial: 'cases/case_messages', locals: { case_details: @case }

  - if @case_transitions.any?
    section.case-info.has-page-break
      = render partial: 'cases/case_history', locals: { case_transitions: @case_transitions }

  - if @case.ico?
    section.case-info
      = render partial: "cases/#{@case.original_case.type_abbreviation.downcase}/case_details",
              locals: { case_details: @case.original_case.decorate }

  section.case-info
    = action_links_for_allowed_events(@case, :extend_for_pit, :destroy_case).join(' | ').html_safe
