version: 2

references:
  test_container_config: &test_container_config
    docker:
      - image: circleci/ruby:2.5.3-node-browsers-legacy
        environment:
          RAILS_ENV: test
          RACK_ENV: test
          PG_HOST: 127.0.0.1
          PG_PASSWORD: ""
          PG_USER: postgres
          PGUSER: postgres
          PGHOST: 127.0.0.1
          POSTGRES_DB: peoplefinder_test

      - image: circleci/postgres:9.5-alpine
        environment:
          PG_PASSWORD: ""
          PG_USER: postgres
          POSTGRES_DB: peoplefinder_test-questions_test
          POSTGRES_USER: postgres
          PGUSER: postgres

  container_config: &container_config
    docker:
      - image: ${ECR_ENDPOINT}/cloud-platform/tools:circleci
        environment:
          GITHUB_TEAM_NAME_SLUG: correspondence
          APPLICATION_DEPLOY_NAME: track-a-query
  build_docker_image: &build_docker_image
    run:
      name: Build track-a-query docker image
      command: |
        export BUILD_DATE=$(date -Is) >> $BASH_ENV
        source $BASH_ENV
        docker build \
          --build-arg VERSION_NUMBER=${CIRCLE_BUILD_NUM} \
          --build-arg COMMIT_ID=${CIRCLE_SHA1} \
          --build-arg BUILD_DATE=${BUILD_DATE} \
          --build-arg BUILD_TAG=${CIRCLE_BRANCH} \
          -t app .
  push_docker_image: &push_docker_image
    run:
      name: Push  track-a-query docker image
      command: |
        team_name=correspondence
        ecr_repo_name=track-a-query-ecr
        component=track-a-query

        current_branch=$(git branch | grep \* | cut -d ' ' -f2)
        current_version=$(git rev-parse $current_branch)
        short_version=$(git rev-parse --short $current_branch)
        region='eu-west-2'
        git_remote_url="https://github.com/ministryofjustice/correspondence_tool_staff.git";
        git_fetch_url=$git_remote_url#$current_version

        login="$(aws ecr get-login --region "$region" --no-include-email)"
        ${login}
        docker_endpoint=754256621582.dkr.ecr.eu-west-2.amazonaws.com
        docker_registry=${docker_endpoint}/${team_name}/${ecr_repo_name}

        docker_build_tag=cts-${current_branch}-${short_version}
        docker_registry_tag=${docker_registry}:${docker_build_tag}

        docker tag app ${docker_registry_tag}
        docker push ${docker_registry_tag}
        # if [ "${CIRCLE_BRANCH}" == "master" ]; then
        #   docker tag app "${ECR_ENDPOINT}/${GITHUB_TEAM_NAME_SLUG}/${CIRCLE_PROJECT_REPONAME}:circle-latest"
        #   docker push "${ECR_ENDPOINT}/${GITHUB_TEAM_NAME_SLUG}/${CIRCLE_PROJECT_REPONAME}:circle-latest"
        # fi

jobs:
  build:
    <<: *container_config
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - *build_docker_image
      - *push_docker_image
